# cp ../sample_data/cisco_asa.log /tmp/cisco_asa.log
# cp ../patterns/cisco.patterns.conf /tmp/cisco.patterns.conf

input {
    file {
        path => "/tmp/cisco_asa.log"
        start_position => beginning
        sincedb_path => "/dev/null"
        exclude => "*.gz"
    }
}

filter {
 ####### Cisco FW ####
 grok {
  patterns_dir => ["/tmp/cisco.patterns.conf"]
  match => ["message", "%{CISCO_TAGGED_SYSLOG} %{GREEDYDATA:cisco_message}"]
 }
 # Parse the syslog severity and facility
 syslog_pri { }

 # Extract fields from the each of the detailed message types
 # The patterns provided below are included in core of LogStash 1.2.0.
 grok {
   patterns_dir => ["/tmp/cisco.patterns.conf"]
   match => {
      "cisco_message" => [
           "%{CISCOFW106001}",
           "%{CISCOFW106006_106007_106010}",
           "%{CISCOFW106014}",
           "%{CISCOFW106015}",
           "%{CISCOFW106021}",
           "%{CISCOFW106023}",
           "%{CISCOFW106100}",
           "%{CISCOFW110002}",
           "%{CISCOFW302010}",
           "%{CISCOFW302013_302014_302015_302016}",
           "%{CISCOFW302020_302021}",
           "%{CISCOFW305011}",
           "%{CISCOFW313001_313004_313008}",
           "%{CISCOFW313005}",
           "%{CISCOFW402117}",
           "%{CISCOFW402119}",
           "%{CISCOFW419001}",
           "%{CISCOFW419002}",
           "%{CISCOFW500004}",
           "%{CISCOFW602303_602304}",
           "%{CISCOFW710001_710002_710003_710005_710006}",
           "%{CISCOFW713172}",
           "%{CISCOFW733100}",
           "%{CISCO_ASA_GENERIC}"
         ]
    }
 }

 if [src_ip] {
    geoip {
      add_tag => [ "GeoIP" ]
      # database => "/etc/logstash/geoip/GeoLiteCity.dat"
      source => "src_ip"
    }

    if [geoip][city_name] == "" { mutate { remove_field => "[geoip][city_name]" } }
    if [geoip][continent_code] == "" { mutate { remove_field => "[geoip][continent_code]" } }
    if [geoip][country_code2] == "" { mutate { remove_field => "[geoip][country_code2]" } }
    if [geoip][country_code3] == "" { mutate { remove_field => "[geoip][country_code3]" } }
    if [geoip][country_name] == "" { mutate { remove_field => "[geoip][country_name]" } }
    if [geoip][latitude] == "" { mutate { remove_field => "[geoip][latitude]" } }
    if [geoip][longitude] == "" { mutate { remove_field => "[geoip][longitude]" } }
    if [geoip][postal_code] == "" { mutate { remove_field => "[geoip][postal_code]" } }
    if [geoip][region_name] == "" { mutate { remove_field => "[geoip][region_name]" } }
    if [geoip][time_zone] == "" { mutate { remove_field => "[geoip][time_zone]" } }
}

 # Parse the date
 date {
 match => ["timestamp",
 "MMM dd HH:mm:ss",
 "MMM d HH:mm:ss",
 "MMM dd yyyy HH:mm:ss",
 "MMM d yyyy HH:mm:ss"
 ]
 }
 ###### End of Cisco FW #######
}

output {
    stdout {
        codec => rubydebug
    }
}
